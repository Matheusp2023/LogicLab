/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/NetBeansModuleDevelopment-files/templateTopComponent637.java to edit this template
 */
package org.ufal.logiclabfilesupport.ui;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JButton;
import javax.swing.JToolBar;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.filesystems.FileObject;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.ufal.logiclabfilesupport.ui//CircuitEditorTopComponent//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "CircuitEditorTopComponent",
        iconBase = "org/ufal/logiclabfilesupport/resources/logic-diagram-icon.png",
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "org.ufal.logiclabfilesupport.ui.CircuitEditorTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_CircuitEditorTopComponentAction",
        preferredID = "CircuitEditorTopComponent"
)
@Messages({
    "CTL_CircuitEditorTopComponentAction=CircuitEditorTopComponent",
    "CTL_CircuitEditorTopComponent=CircuitEditorTopComponent Window",
    "HINT_CircuitEditorTopComponent=This is a CircuitEditorTopComponent window"
})
public final class CircuitEditorTopComponent extends TopComponent {
    
    private FileObject fileObject;
    private CircuitEditorGridPanel gridPanel;
    private String selectedGateType = null;

    public CircuitEditorTopComponent() {
        initComponents();
        setName(Bundle.CTL_CircuitEditorTopComponent());
        setToolTipText(Bundle.HINT_CircuitEditorTopComponent());
        
        gridPanel = new CircuitEditorGridPanel();
        setLayout(new BorderLayout());
        add(gridPanel, BorderLayout.CENTER);
        
        JToolBar toolBar = new JToolBar();
        JButton andButton = new JButton("AND");
        JButton orButton = new JButton("OR");
        JButton notButton = new JButton("NOT");
        
        andButton.addActionListener((ActionEvent e) -> {
            selectedGateType = "AND";
        });
        
        orButton.addActionListener((ActionEvent e) -> {
            selectedGateType = "OR";
        });
        
        notButton.addActionListener((ActionEvent e) -> {
            selectedGateType = "NOT";
        });
        
        toolBar.add(andButton);
        toolBar.add(orButton);
        toolBar.add(notButton);
        add(toolBar, BorderLayout.NORTH);
        
        gridPanel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                handleGridClick(evt);
            }
        });
    }
    
    public CircuitEditorTopComponent(FileObject fileObject) {
        this();
        this.fileObject = fileObject;
        setDisplayName(fileObject.getName());
    }
    
    private void handleGridClick(MouseEvent evt) {
        if (selectedGateType != null) {
            gridPanel.addGate(selectedGateType, evt.getX(), evt.getY());
            selectedGateType = null;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    public FileObject getFileObject() {
        return fileObject;
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
